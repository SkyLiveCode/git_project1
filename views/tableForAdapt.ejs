<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scrollable Table</title>
    <style>
        .sort-arrow {
            margin-left: 5px;
            display: inline-flex;
            flex-direction: column;
        }
        .sort-arrow span {
            color: gray;
            font-size: 12px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Scrollable Table</h1>
        <div class="rows-per-page">
            <div>
                Show 
                <select id="rowsPerPageSelect">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="20">20</option>
                </select> 
                entries
            </div>
            <input type="text" id="searchInput" placeholder="Search...">
        </div>
        <table id="dataTable">
            <thead>
                <tr>
                    <th data-column="position">POSITION <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="email">EMAIL <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="city">CITY <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="date">DATE <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="salary">SALARY <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="age">AGE <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="experience">EXPERIENCE <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="status">STATUS <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                    <th data-column="actions">ACTIONS <div class="sort-arrow"><span class="up-arrow">&#9650;</span><span class="down-arrow">&#9660;</span></div></th>
                </tr>
            </thead>
            <tbody id="tableBody">
                <tr>
                    <td>Safety Technician</td>
                    <td>amoakler8@shareasale.com</td>
                    <td>Mogilany</td>
                    <td>12/29/2021</td>
                    <td>$11677.32</td>
                    <td>39</td>
                    <td>9 Years</td>
                    <td>APPLIED</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Administrative Assistant</td>
                    <td>aharvatt11@addtoany.com</td>
                    <td>Ulundi</td>
                    <td>11/04/2021</td>
                    <td>$21782.82</td>
                    <td>41</td>
                    <td>1 Year</td>
                    <td>CURRENT</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Staff Accountant</td>
                    <td>aglozman1r@storify.com</td>
                    <td>Pendawanbaru</td>
                    <td>08/25/2021</td>
                    <td>$10745.32</td>
                    <td>27</td>
                    <td>3 Years</td>
                    <td>APPLIED</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Analyst Programmer</td>
                    <td>bskirving24@cbsnews.com</td>
                    <td>Balky</td>
                    <td>09/27/2021</td>
                    <td>$24733.28</td>
                    <td>39</td>
                    <td>1 Year</td>
                    <td>RESIGNED</td>
                    <td></td>
                </tr>
                <tr>
                    <td>VP Quality Control</td>
                    <td>bcoulman1@yolasite.com</td>
                    <td>Hinigaran</td>
                    <td>05/20/2021</td>
                    <td>$13633.69</td>
                    <td>63</td>
                    <td>3 Years</td>
                    <td>PROFESSIONAL</td>
                    <td></td>
                </tr>
                <tr>
                    <td>VP Quality Control</td>
                    <td>blongland12@gizmodo.com</td>
                    <td>Damu</td>
                    <td>07/18/2021</td>
                    <td>$22794.60</td>
                    <td>62</td>
                    <td>2 Years</td>
                    <td>PROFESSIONAL</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Project Manager</td>
                    <td>sandra.bullock@movie.com</td>
                    <td>Los Angeles</td>
                    <td>03/15/2022</td>
                    <td>$50000.00</td>
                    <td>55</td>
                    <td>20 Years</td>
                    <td>PROFESSIONAL</td>
                    <td></td>
                </tr>
                <!-- Add more rows as needed -->
            </tbody>
        </table>
        <div class="pagination">
            <button id="prevPage">Previous</button>
            <span id="pageIndicator">1</span>
            <button id="nextPage">Next</button>
        </div>
    </div>
    <script>
        let currentPage = 1;
        let rowsPerPage = 10;
        let data = [];
        let filteredData = [];
        let currentSortColumn = '';
        let currentSortDirection = 'asc';

        document.addEventListener('DOMContentLoaded', () => {
            fetchData();
            document.getElementById('searchInput').addEventListener('input', searchTable);
            document.getElementById('prevPage').addEventListener('click', () => changePage(-1));
            document.getElementById('nextPage').addEventListener('click', () => changePage(1));
            document.getElementById('rowsPerPageSelect').addEventListener('change', changeRowsPerPage);

            document.querySelectorAll('.up-arrow').forEach(arrow => {
                arrow.addEventListener('click', () => sortTable(arrow.parentElement.parentElement.dataset.column, 'asc'));
            });

            document.querySelectorAll('.down-arrow').forEach(arrow => {
                arrow.addEventListener('click', () => sortTable(arrow.parentElement.parentElement.dataset.column, 'desc'));
            });
        });

        function fetchData() {
            const tableBody = document.getElementById('tableBody');
            const rows = tableBody.getElementsByTagName('tr');
            data = Array.from(rows).map(row => {
                const cells = row.getElementsByTagName('td');
                return {
                    position: cells[0].textContent,
                    email: cells[1].textContent,
                    city: cells[2].textContent,
                    date: cells[3].textContent,
                    salary: cells[4].textContent,
                    age: parseInt(cells[5].textContent, 10),
                    experience: cells[6].textContent,
                    status: cells[7].textContent,
                    actions: cells[8].textContent
                };
            });
            filteredData = data;
            renderTable();
        }

        function renderTable() {
            const tableBody = document.getElementById('tableBody');
            tableBody.innerHTML = '';

            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            const pageData = filteredData.slice(start, end);

            pageData.forEach(row => {
                const tr = document.createElement('tr');
                for (const key in row) {
                    const td = document.createElement('td');
                    td.textContent = row[key];
                    tr.appendChild(td);
                }
                tableBody.appendChild(tr);
            });

            document.getElementById('pageIndicator').textContent = currentPage;
        }

        function searchTable() {
            const query = document.getElementById('searchInput').value.toLowerCase();
            filteredData = data.filter(row => {
                return Object.values(row).some(value => value.toString().toLowerCase().includes(query));
            });
            currentPage = 1;
            renderTable();
        }

        function changePage(direction) {
            const maxPage = Math.ceil(filteredData.length / rowsPerPage);
            if (currentPage + direction > 0 && currentPage + direction <= maxPage) {
                currentPage += direction;
                renderTable();
            }
        }

        function changeRowsPerPage() {
            rowsPerPage = parseInt(document.getElementById('rowsPerPageSelect').value);
            currentPage = 1;
            renderTable();
        }

        function sortTable(column, direction) {
            currentSortColumn = column;
            currentSortDirection = direction;

            filteredData.sort((a, b) => {
                const valueA = a[column];
                const valueB = b[column];

                if (currentSortDirection === 'asc') {
                    return valueA > valueB ? 1 : -1;
                } else {
                    return valueA < valueB ? 1 : -1;
                }
            });

            updateSortArrows(column);
            renderTable();
        }

        function updateSortArrows(column) {
            document.querySelectorAll('.sort-arrow span').forEach(span => {
                span.style.color = 'gray';
            });

            const activeArrow = document.querySelector(`th[data-column="${column}"] .sort-arrow`);
            if (currentSortDirection === 'asc') {
                activeArrow.children[0].style.color = 'black'; // Up arrow
                activeArrow.children[1].style.color = 'gray'; // Down arrow
            } else {
                activeArrow.children[0].style.color = 'gray'; // Up arrow
                activeArrow.children[1].style.color = 'black'; // Down arrow
            }
        }
    </script>
</body>
</html>
